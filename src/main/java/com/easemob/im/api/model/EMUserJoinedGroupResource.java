/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.easemob.im.JSON;

/**
 * EMUserJoinedGroupResource
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-29T15:02:31.237631+08:00[Asia/Shanghai]")
public class EMUserJoinedGroupResource {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_AVATAR = "avatar";
  @SerializedName(SERIALIZED_NAME_AVATAR)
  private String avatar;

  public static final String SERIALIZED_NAME_OWNER = "owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private String owner;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISABLED = "disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  private Boolean disabled;

  public static final String SERIALIZED_NAME_PUBLIC = "public";
  @SerializedName(SERIALIZED_NAME_PUBLIC)
  private Boolean _public;

  public static final String SERIALIZED_NAME_ALLOWINVITES = "allowinvites";
  @SerializedName(SERIALIZED_NAME_ALLOWINVITES)
  private Boolean allowinvites;

  public static final String SERIALIZED_NAME_MEMBERSONLY = "membersonly";
  @SerializedName(SERIALIZED_NAME_MEMBERSONLY)
  private Boolean membersonly;

  public static final String SERIALIZED_NAME_MAXUSERS = "maxusers";
  @SerializedName(SERIALIZED_NAME_MAXUSERS)
  private Integer maxusers;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private BigDecimal created;

  public EMUserJoinedGroupResource() {
  }

  public EMUserJoinedGroupResource id(String id) {

    this.id = id;
    return this;
  }

  /**
   * 群组 ID
   * @return id
   **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public EMUserJoinedGroupResource name(String name) {

    this.name = name;
    return this;
  }

  /**
   * 群组名称
   * @return name
   **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public EMUserJoinedGroupResource avatar(String avatar) {

    this.avatar = avatar;
    return this;
  }

  /**
   * 群组头像的 URL
   * @return avatar
   **/
  @javax.annotation.Nullable
  public String getAvatar() {
    return avatar;
  }


  public void setAvatar(String avatar) {
    this.avatar = avatar;
  }


  public EMUserJoinedGroupResource owner(String owner) {

    this.owner = owner;
    return this;
  }

  /**
   * 群主的用户 ID
   * @return owner
   **/
  @javax.annotation.Nullable
  public String getOwner() {
    return owner;
  }


  public void setOwner(String owner) {
    this.owner = owner;
  }


  public EMUserJoinedGroupResource description(String description) {

    this.description = description;
    return this;
  }

  /**
   * 群组描述
   * @return description
   **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public EMUserJoinedGroupResource disabled(Boolean disabled) {

    this.disabled = disabled;
    return this;
  }

  /**
   * 群组是否被禁用： - true：禁用。禁用后不能对群组进行任何修改。 - false：未禁用
   * @return disabled
   **/
  @javax.annotation.Nullable
  public Boolean getDisabled() {
    return disabled;
  }


  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public EMUserJoinedGroupResource _public(Boolean _public) {

    this._public = _public;
    return this;
  }

  /**
   * 是否是公开群： - true：公开群。公开群可以被搜索到，用户可以申请加入公开群。 - false：私有群。私有群无法被搜索到，需要群主或群管理员邀请，用户才可以加入
   * @return _public
   **/
  @javax.annotation.Nullable
  public Boolean getPublic() {
    return _public;
  }


  public void setPublic(Boolean _public) {
    this._public = _public;
  }


  public EMUserJoinedGroupResource allowinvites(Boolean allowinvites) {

    this.allowinvites = allowinvites;
    return this;
  }

  /**
   * 是否允许普通群成员邀请用户加入群组： - true：普通群成员可拉人入群; - false：只有群主或者管理员才可以拉人入群
   * @return allowinvites
   **/
  @javax.annotation.Nullable
  public Boolean getAllowinvites() {
    return allowinvites;
  }


  public void setAllowinvites(Boolean allowinvites) {
    this.allowinvites = allowinvites;
  }


  public EMUserJoinedGroupResource membersonly(Boolean membersonly) {

    this.membersonly = membersonly;
    return this;
  }

  /**
   * 用户申请入群是否需要群主或者群管理员审批。 - true：需要； - false：不需要，用户直接进群
   * @return membersonly
   **/
  @javax.annotation.Nullable
  public Boolean getMembersonly() {
    return membersonly;
  }


  public void setMembersonly(Boolean membersonly) {
    this.membersonly = membersonly;
  }


  public EMUserJoinedGroupResource maxusers(Integer maxusers) {

    this.maxusers = maxusers;
    return this;
  }

  /**
   * 群组最大成员数（包括群主）
   * @return maxusers
   **/
  @javax.annotation.Nullable
  public Integer getMaxusers() {
    return maxusers;
  }


  public void setMaxusers(Integer maxusers) {
    this.maxusers = maxusers;
  }


  public EMUserJoinedGroupResource created(BigDecimal created) {

    this.created = created;
    return this;
  }

  /**
   * 群组创建的时间戳，单位为毫秒
   * @return created
   **/
  @javax.annotation.Nullable
  public BigDecimal getCreated() {
    return created;
  }


  public void setCreated(BigDecimal created) {
    this.created = created;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EMUserJoinedGroupResource userJoinedGroupResource = (EMUserJoinedGroupResource) o;
    return Objects.equals(this.id, userJoinedGroupResource.id) &&
            Objects.equals(this.name, userJoinedGroupResource.name) &&
            Objects.equals(this.avatar, userJoinedGroupResource.avatar) &&
            Objects.equals(this.owner, userJoinedGroupResource.owner) &&
            Objects.equals(this.description, userJoinedGroupResource.description) &&
            Objects.equals(this.disabled, userJoinedGroupResource.disabled) &&
            Objects.equals(this._public, userJoinedGroupResource._public) &&
            Objects.equals(this.allowinvites, userJoinedGroupResource.allowinvites) &&
            Objects.equals(this.membersonly, userJoinedGroupResource.membersonly) &&
            Objects.equals(this.maxusers, userJoinedGroupResource.maxusers) &&
            Objects.equals(this.created, userJoinedGroupResource.created);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, avatar, owner, description, disabled, _public, allowinvites, membersonly, maxusers, created);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EMUserJoinedGroupResource {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    _public: ").append(toIndentedString(_public)).append("\n");
    sb.append("    allowinvites: ").append(toIndentedString(allowinvites)).append("\n");
    sb.append("    membersonly: ").append(toIndentedString(membersonly)).append("\n");
    sb.append("    maxusers: ").append(toIndentedString(maxusers)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("avatar");
    openapiFields.add("owner");
    openapiFields.add("description");
    openapiFields.add("disabled");
    openapiFields.add("public");
    openapiFields.add("allowinvites");
    openapiFields.add("membersonly");
    openapiFields.add("maxusers");
    openapiFields.add("created");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EMUserJoinedGroupResource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    if (jsonElement == null) {
      if (!EMUserJoinedGroupResource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
        throw new IllegalArgumentException(String.format("The required field(s) %s in EMUserJoinedGroupResource is not found in the empty JSON string", EMUserJoinedGroupResource.openapiRequiredFields.toString()));
      }
    }

    Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
    // check to see if the JSON string contains additional fields
    for (Map.Entry<String, JsonElement> entry : entries) {
      if (!EMUserJoinedGroupResource.openapiFields.contains(entry.getKey())) {
        throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EMUserJoinedGroupResource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
      }
    }
    JsonObject jsonObj = jsonElement.getAsJsonObject();
    if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
    }
    if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
    }
    if ((jsonObj.get("avatar") != null && !jsonObj.get("avatar").isJsonNull()) && !jsonObj.get("avatar").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `avatar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatar").toString()));
    }
    if ((jsonObj.get("owner") != null && !jsonObj.get("owner").isJsonNull()) && !jsonObj.get("owner").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `owner` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner").toString()));
    }
    if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
      throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
    }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
      if (!EMUserJoinedGroupResource.class.isAssignableFrom(type.getRawType())) {
        return null; // this class only serializes 'EMUserJoinedGroupResource' and its subtypes
      }
      final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
      final TypeAdapter<EMUserJoinedGroupResource> thisAdapter
              = gson.getDelegateAdapter(this, TypeToken.get(EMUserJoinedGroupResource.class));

      return (TypeAdapter<T>) new TypeAdapter<EMUserJoinedGroupResource>() {
        @Override
        public void write(JsonWriter out, EMUserJoinedGroupResource value) throws IOException {
          JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
          elementAdapter.write(out, obj);
        }

        @Override
        public EMUserJoinedGroupResource read(JsonReader in) throws IOException {
          JsonElement jsonElement = elementAdapter.read(in);
          validateJsonElement(jsonElement);
          return thisAdapter.fromJsonTree(jsonElement);
        }

      }.nullSafe();
    }
  }

  /**
   * Create an instance of EMUserJoinedGroupResource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EMUserJoinedGroupResource
   * @throws IOException if the JSON string is invalid with respect to EMUserJoinedGroupResource
   */
  public static EMUserJoinedGroupResource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EMUserJoinedGroupResource.class);
  }

  /**
   * Convert an instance of EMUserJoinedGroupResource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

