/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api;

import com.easemob.im.ApiCallback;
import com.easemob.im.ApiClient;
import com.easemob.im.ApiException;
import com.easemob.im.ApiResponse;
import com.easemob.im.Configuration;
import com.easemob.im.Pair;

import com.easemob.im.api.model.*;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MetadataApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public MetadataApi() {
        this(Configuration.getDefaultApiClient());
    }

    public MetadataApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for batchCustomGroupMemberAttribute
     * @param groupId  (required)
     * @param emBatchCustomGroupMemberAttribute  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     */
    public okhttp3.Call batchCustomGroupMemberAttributeCall(String groupId, List<EMBatchCustomGroupMemberAttribute> emBatchCustomGroupMemberAttribute, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emBatchCustomGroupMemberAttribute;

        // create path and map variables
        String localVarPath = "/metadata/chatgroup/{group_id}/users/batch"
                .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
                "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call batchCustomGroupMemberAttributeValidateBeforeCall(String groupId, List<EMBatchCustomGroupMemberAttribute> emBatchCustomGroupMemberAttribute, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling batchCustomGroupMemberAttribute(Async)");
        }

        return batchCustomGroupMemberAttributeCall(groupId, emBatchCustomGroupMemberAttribute, _callback);

    }

    /**
     * 批量设置群成员自定义属性
     * 批量设置群成员的自定义属性（key-value），例如，在群组中的昵称和头像等。每次请求最多可为 20 个群成员设置多个属性，而且可对不同群成员设置不同属性。传入相同用户 ID 时，若其属性名称不同，则添加，相同则更新。文档介绍：https://doc.easemob.com/document/server-side/group_member.html#%E6%89%B9%E9%87%8F%E8%AE%BE%E7%BD%AE%E7%BE%A4%E6%88%90%E5%91%98%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param groupId  (required)
     * @param emBatchCustomGroupMemberAttribute  (optional)
     * @return EMBatchCustomGroupMemberAttributeResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public EMBatchCustomGroupMemberAttributeResult batchCustomGroupMemberAttribute(String groupId, List<EMBatchCustomGroupMemberAttribute> emBatchCustomGroupMemberAttribute) throws ApiException {
        ApiResponse<EMBatchCustomGroupMemberAttributeResult> localVarResp = batchCustomGroupMemberAttributeWithHttpInfo(groupId, emBatchCustomGroupMemberAttribute);
        return localVarResp.getData();
    }

    /**
     * 批量设置群成员自定义属性
     * 批量设置群成员的自定义属性（key-value），例如，在群组中的昵称和头像等。每次请求最多可为 20 个群成员设置多个属性，而且可对不同群成员设置不同属性。传入相同用户 ID 时，若其属性名称不同，则添加，相同则更新。文档介绍：https://doc.easemob.com/document/server-side/group_member.html#%E6%89%B9%E9%87%8F%E8%AE%BE%E7%BD%AE%E7%BE%A4%E6%88%90%E5%91%98%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param groupId  (required)
     * @param emBatchCustomGroupMemberAttribute  (optional)
     * @return ApiResponse&lt;EMBatchCustomGroupMemberAttributeResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public ApiResponse<EMBatchCustomGroupMemberAttributeResult> batchCustomGroupMemberAttributeWithHttpInfo(String groupId, List<EMBatchCustomGroupMemberAttribute> emBatchCustomGroupMemberAttribute) throws ApiException {
        okhttp3.Call localVarCall = batchCustomGroupMemberAttributeValidateBeforeCall(groupId, emBatchCustomGroupMemberAttribute, null);
        Type localVarReturnType = new TypeToken<EMBatchCustomGroupMemberAttributeResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 批量设置群成员自定义属性 (asynchronously)
     * 批量设置群成员的自定义属性（key-value），例如，在群组中的昵称和头像等。每次请求最多可为 20 个群成员设置多个属性，而且可对不同群成员设置不同属性。传入相同用户 ID 时，若其属性名称不同，则添加，相同则更新。文档介绍：https://doc.easemob.com/document/server-side/group_member.html#%E6%89%B9%E9%87%8F%E8%AE%BE%E7%BD%AE%E7%BE%A4%E6%88%90%E5%91%98%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param groupId  (required)
     * @param emBatchCustomGroupMemberAttribute  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     */
    public okhttp3.Call batchCustomGroupMemberAttributeAsync(String groupId, List<EMBatchCustomGroupMemberAttribute> emBatchCustomGroupMemberAttribute, final ApiCallback<EMBatchCustomGroupMemberAttributeResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = batchCustomGroupMemberAttributeValidateBeforeCall(groupId, emBatchCustomGroupMemberAttribute, _callback);
        Type localVarReturnType = new TypeToken<EMBatchCustomGroupMemberAttributeResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    /**
     * Build call for customGroupMemberAttribute
     * @param groupId  (required)
     * @param username  (required)
     * @param emCustomGroupMemberAttribute  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     */
    public okhttp3.Call customGroupMemberAttributeCall(String groupId, String username, EMCustomGroupMemberAttribute emCustomGroupMemberAttribute, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emCustomGroupMemberAttribute;

        // create path and map variables
        String localVarPath = "/metadata/chatgroup/{group_id}/user/{username}"
                .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()))
                .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
                "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call customGroupMemberAttributeValidateBeforeCall(String groupId, String username, EMCustomGroupMemberAttribute emCustomGroupMemberAttribute, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling customGroupMemberAttribute(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling customGroupMemberAttribute(Async)");
        }

        return customGroupMemberAttributeCall(groupId, username, emCustomGroupMemberAttribute, _callback);

    }

    /**
     * 设置群成员自定义属性
     * 设置群成员自定义属性。群成员可设置自定义属性（key-value），例如在群组中的昵称和头像等。群主可修改所有群成员的自定义属性，其他群成员只能修改自己的自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%AE%BE%E7%BD%AE%E7%BE%A4%E6%88%90%E5%91%98%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param groupId  (required)
     * @param username  (required)
     * @param emCustomGroupMemberAttribute  (optional)
     * @return EMCustomGroupMemberAttributeResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public EMCustomGroupMemberAttributeResult customGroupMemberAttribute(String groupId, String username, EMCustomGroupMemberAttribute emCustomGroupMemberAttribute) throws ApiException {
        ApiResponse<EMCustomGroupMemberAttributeResult> localVarResp = customGroupMemberAttributeWithHttpInfo(groupId, username, emCustomGroupMemberAttribute);
        return localVarResp.getData();
    }

    /**
     * 设置群成员自定义属性
     * 设置群成员自定义属性。群成员可设置自定义属性（key-value），例如在群组中的昵称和头像等。群主可修改所有群成员的自定义属性，其他群成员只能修改自己的自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%AE%BE%E7%BD%AE%E7%BE%A4%E6%88%90%E5%91%98%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param groupId  (required)
     * @param username  (required)
     * @param emCustomGroupMemberAttribute  (optional)
     * @return ApiResponse&lt;EMCustomGroupMemberAttributeResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public ApiResponse<EMCustomGroupMemberAttributeResult> customGroupMemberAttributeWithHttpInfo(String groupId, String username, EMCustomGroupMemberAttribute emCustomGroupMemberAttribute) throws ApiException {
        okhttp3.Call localVarCall = customGroupMemberAttributeValidateBeforeCall(groupId, username, emCustomGroupMemberAttribute, null);
        Type localVarReturnType = new TypeToken<EMCustomGroupMemberAttributeResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 设置群成员自定义属性 (asynchronously)
     * 设置群成员自定义属性。群成员可设置自定义属性（key-value），例如在群组中的昵称和头像等。群主可修改所有群成员的自定义属性，其他群成员只能修改自己的自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%AE%BE%E7%BD%AE%E7%BE%A4%E6%88%90%E5%91%98%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param groupId  (required)
     * @param username  (required)
     * @param emCustomGroupMemberAttribute  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     */
    public okhttp3.Call customGroupMemberAttributeAsync(String groupId, String username, EMCustomGroupMemberAttribute emCustomGroupMemberAttribute, final ApiCallback<EMCustomGroupMemberAttributeResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = customGroupMemberAttributeValidateBeforeCall(groupId, username, emCustomGroupMemberAttribute, _callback);
        Type localVarReturnType = new TypeToken<EMCustomGroupMemberAttributeResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteUserMetadata
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     */
    public okhttp3.Call deleteUserMetadataCall(String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/metadata/user/{username}"
                .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteUserMetadataValidateBeforeCall(String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling deleteUserMetadata(Async)");
        }

        return deleteUserMetadataCall(username, _callback);

    }

    /**
     * 删除用户属性
     * 删除单个用户的所有属性。如果指定的用户或用户属性不存在（可能已删除），也视为删除成功。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7
     * @param username  (required)
     * @return EMDeleteUserMetadataResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public EMDeleteUserMetadataResult deleteUserMetadata(String username) throws ApiException {
        ApiResponse<EMDeleteUserMetadataResult> localVarResp = deleteUserMetadataWithHttpInfo(username);
        return localVarResp.getData();
    }

    /**
     * 删除用户属性
     * 删除单个用户的所有属性。如果指定的用户或用户属性不存在（可能已删除），也视为删除成功。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7
     * @param username  (required)
     * @return ApiResponse&lt;EMDeleteUserMetadataResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public ApiResponse<EMDeleteUserMetadataResult> deleteUserMetadataWithHttpInfo(String username) throws ApiException {
        okhttp3.Call localVarCall = deleteUserMetadataValidateBeforeCall(username, null);
        Type localVarReturnType = new TypeToken<EMDeleteUserMetadataResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 删除用户属性 (asynchronously)
     * 删除单个用户的所有属性。如果指定的用户或用户属性不存在（可能已删除），也视为删除成功。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     */
    public okhttp3.Call deleteUserMetadataAsync(String username, final ApiCallback<EMDeleteUserMetadataResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteUserMetadataValidateBeforeCall(username, _callback);
        Type localVarReturnType = new TypeToken<EMDeleteUserMetadataResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getGroupMemberAllCustomAttribute
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     */
    public okhttp3.Call getGroupMemberAllCustomAttributeCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/metadata/chatgroup/{group_id}/user/{username}"
                .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()))
                .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getGroupMemberAllCustomAttributeValidateBeforeCall(String groupId, String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling getGroupMemberAllCustomAttribute(Async)");
        }

        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling getGroupMemberAllCustomAttribute(Async)");
        }

        return getGroupMemberAllCustomAttributeCall(groupId, username, _callback);

    }

    /**
     * 获取单个群成员的所有自定义属性
     * 获取单个群成员的所有自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%8D%95%E4%B8%AA%E7%BE%A4%E6%88%90%E5%91%98%E7%9A%84%E6%89%80%E6%9C%89%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param groupId  (required)
     * @param username  (required)
     * @return EMGetGroupMemberAllCustomAttributeResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public EMGetGroupMemberAllCustomAttributeResult getGroupMemberAllCustomAttribute(String groupId, String username) throws ApiException {
        ApiResponse<EMGetGroupMemberAllCustomAttributeResult> localVarResp = getGroupMemberAllCustomAttributeWithHttpInfo(groupId, username);
        return localVarResp.getData();
    }

    /**
     * 获取单个群成员的所有自定义属性
     * 获取单个群成员的所有自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%8D%95%E4%B8%AA%E7%BE%A4%E6%88%90%E5%91%98%E7%9A%84%E6%89%80%E6%9C%89%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param groupId  (required)
     * @param username  (required)
     * @return ApiResponse&lt;EMGetGroupMemberAllCustomAttributeResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public ApiResponse<EMGetGroupMemberAllCustomAttributeResult> getGroupMemberAllCustomAttributeWithHttpInfo(String groupId, String username) throws ApiException {
        okhttp3.Call localVarCall = getGroupMemberAllCustomAttributeValidateBeforeCall(groupId, username, null);
        Type localVarReturnType = new TypeToken<EMGetGroupMemberAllCustomAttributeResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取单个群成员的所有自定义属性 (asynchronously)
     * 获取单个群成员的所有自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%8D%95%E4%B8%AA%E7%BE%A4%E6%88%90%E5%91%98%E7%9A%84%E6%89%80%E6%9C%89%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param groupId  (required)
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     */
    public okhttp3.Call getGroupMemberAllCustomAttributeAsync(String groupId, String username, final ApiCallback<EMGetGroupMemberAllCustomAttributeResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getGroupMemberAllCustomAttributeValidateBeforeCall(groupId, username, _callback);
        Type localVarReturnType = new TypeToken<EMGetGroupMemberAllCustomAttributeResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getMultipleGroupMembersAttributes
     * @param groupId  (required)
     * @param emGetMultipleGroupMembersAttributes  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     */
    public okhttp3.Call getMultipleGroupMembersAttributesCall(String groupId, EMGetMultipleGroupMembersAttributes emGetMultipleGroupMembersAttributes, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = emGetMultipleGroupMembersAttributes;

        // create path and map variables
        String localVarPath = "/metadata/chatgroup/{group_id}/get"
                .replace("{" + "group_id" + "}", localVarApiClient.escapeString(groupId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
                "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getMultipleGroupMembersAttributesValidateBeforeCall(String groupId, EMGetMultipleGroupMembersAttributes emGetMultipleGroupMembersAttributes, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'groupId' is set
        if (groupId == null) {
            throw new ApiException("Missing the required parameter 'groupId' when calling getMultipleGroupMembersAttributes(Async)");
        }

        return getMultipleGroupMembersAttributesCall(groupId, emGetMultipleGroupMembersAttributes, _callback);

    }

    /**
     * 根据属性 key 获取多个群成员的自定义属性
     * 根据指定的属性 key 获取多个群成员的自定义属性。每次最多可获取 10 个群成员的自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%A0%B9%E6%8D%AE%E5%B1%9E%E6%80%A7-key-%E8%8E%B7%E5%8F%96%E5%A4%9A%E4%B8%AA%E7%BE%A4%E6%88%90%E5%91%98%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param groupId  (required)
     * @param emGetMultipleGroupMembersAttributes  (optional)
     * @return EMGetMultipleGroupMembersAttributes
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public EMGetMultipleGroupMembersAttributesResult getMultipleGroupMembersAttributes(String groupId, EMGetMultipleGroupMembersAttributes emGetMultipleGroupMembersAttributes) throws ApiException {
        ApiResponse<EMGetMultipleGroupMembersAttributesResult> localVarResp = getMultipleGroupMembersAttributesWithHttpInfo(groupId, emGetMultipleGroupMembersAttributes);
        return localVarResp.getData();
    }

    /**
     * 根据属性 key 获取多个群成员的自定义属性
     * 根据指定的属性 key 获取多个群成员的自定义属性。每次最多可获取 10 个群成员的自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%A0%B9%E6%8D%AE%E5%B1%9E%E6%80%A7-key-%E8%8E%B7%E5%8F%96%E5%A4%9A%E4%B8%AA%E7%BE%A4%E6%88%90%E5%91%98%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param groupId  (required)
     * @param emGetMultipleGroupMembersAttributes  (optional)
     * @return ApiResponse&lt;EMGetMultipleGroupMembersAttributesResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public ApiResponse<EMGetMultipleGroupMembersAttributesResult> getMultipleGroupMembersAttributesWithHttpInfo(String groupId, EMGetMultipleGroupMembersAttributes emGetMultipleGroupMembersAttributes) throws ApiException {
        okhttp3.Call localVarCall = getMultipleGroupMembersAttributesValidateBeforeCall(groupId, emGetMultipleGroupMembersAttributes, null);
        Type localVarReturnType = new TypeToken<EMGetMultipleGroupMembersAttributesResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 根据属性 key 获取多个群成员的自定义属性 (asynchronously)
     * 根据指定的属性 key 获取多个群成员的自定义属性。每次最多可获取 10 个群成员的自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%A0%B9%E6%8D%AE%E5%B1%9E%E6%80%A7-key-%E8%8E%B7%E5%8F%96%E5%A4%9A%E4%B8%AA%E7%BE%A4%E6%88%90%E5%91%98%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     * @param groupId  (required)
     * @param emGetMultipleGroupMembersAttributes  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     */
    public okhttp3.Call getMultipleGroupMembersAttributesAsync(String groupId, EMGetMultipleGroupMembersAttributes emGetMultipleGroupMembersAttributes, final ApiCallback<EMGetMultipleGroupMembersAttributes> _callback) throws ApiException {

        okhttp3.Call localVarCall = getMultipleGroupMembersAttributesValidateBeforeCall(groupId, emGetMultipleGroupMembersAttributes, _callback);
        Type localVarReturnType = new TypeToken<EMGetMultipleGroupMembersAttributesResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getUserMetadata
     * @param username  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     */
    public okhttp3.Call getUserMetadataCall(String username, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/metadata/user/{username}"
                .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getUserMetadataValidateBeforeCall(String username, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling getUserMetadata(Async)");
        }

        return getUserMetadataCall(username, _callback);

    }

    /**
     * 获取用户属性
     * 获取单个用户的全部用户属性键值对。需要在请求中填写 {username}，指定获取用户属性的用户 ID。如果指定的用户或用户属性不存在，返回空数据{}。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7
     * @param username  (required)
     * @return EMGetUserMetadataResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public EMGetUserMetadataResult getUserMetadata(String username) throws ApiException {
        ApiResponse<EMGetUserMetadataResult> localVarResp = getUserMetadataWithHttpInfo(username);
        return localVarResp.getData();
    }

    /**
     * 获取用户属性
     * 获取单个用户的全部用户属性键值对。需要在请求中填写 {username}，指定获取用户属性的用户 ID。如果指定的用户或用户属性不存在，返回空数据{}。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7
     * @param username  (required)
     * @return ApiResponse&lt;EMGetUserMetadataResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public ApiResponse<EMGetUserMetadataResult> getUserMetadataWithHttpInfo(String username) throws ApiException {
        okhttp3.Call localVarCall = getUserMetadataValidateBeforeCall(username, null);
        Type localVarReturnType = new TypeToken<EMGetUserMetadataResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 获取用户属性 (asynchronously)
     * 获取单个用户的全部用户属性键值对。需要在请求中填写 {username}，指定获取用户属性的用户 ID。如果指定的用户或用户属性不存在，返回空数据{}。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7
     * @param username  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     */
    public okhttp3.Call getUserMetadataAsync(String username, final ApiCallback<EMGetUserMetadataResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getUserMetadataValidateBeforeCall(username, _callback);
        Type localVarReturnType = new TypeToken<EMGetUserMetadataResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getUserMetadataCapacity
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     */
    public okhttp3.Call getUserMetadataCapacityCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/metadata/user/capacity";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getUserMetadataCapacityValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return getUserMetadataCapacityCall(_callback);

    }

    /**
     * 设置用户属性
     * 取该 app 下所有用户的属性数据大小，单位为字节。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%8B%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7%E6%80%BB%E5%A4%A7%E5%B0%8F
     * @return EMGetUserMetadataCapacityResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public EMGetUserMetadataCapacityResult getUserMetadataCapacity() throws ApiException {
        ApiResponse<EMGetUserMetadataCapacityResult> localVarResp = getUserMetadataCapacityWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 设置用户属性
     * 取该 app 下所有用户的属性数据大小，单位为字节。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%8B%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7%E6%80%BB%E5%A4%A7%E5%B0%8F
     * @return ApiResponse&lt;EMGetUserMetadataCapacityResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public ApiResponse<EMGetUserMetadataCapacityResult> getUserMetadataCapacityWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = getUserMetadataCapacityValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<EMGetUserMetadataCapacityResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 设置用户属性 (asynchronously)
     * 取该 app 下所有用户的属性数据大小，单位为字节。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%8B%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7%E6%80%BB%E5%A4%A7%E5%B0%8F
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     */
    public okhttp3.Call getUserMetadataCapacityAsync(final ApiCallback<EMGetUserMetadataCapacityResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = getUserMetadataCapacityValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<EMGetUserMetadataCapacityResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for setUserMetadata
     * @param username  (required)
     * @param metadata  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * http.response.details
     */
    public okhttp3.Call setUserMetadataCall(String username, Map<String, String> metadata, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/metadata/user/{username}"
                .replace("{" + "username" + "}", localVarApiClient.escapeString(username.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        for (Map.Entry<String, String> entry : metadata.entrySet()) {
            localVarFormParams.put(entry.getKey(), entry.getValue());
        }

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
                "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call setUserMetadataValidateBeforeCall(String username, Map<String, String> metadata, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'username' is set
        if (username == null) {
            throw new ApiException("Missing the required parameter 'username' when calling setUserMetadata(Async)");
        }

        return setUserMetadataCall(username, metadata, _callback);

    }

    /**
     * 设置用户属性
     * 用户属性的内容为一个或多个纯文本键值对，默认单个用户的属性总长度不能超过 2 KB，默认单个 app 下所有用户的属性总长度不能超过 10 GB。利用该 API，每次只能设置一个用户的用户属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7
     * @param username  (required)
     * @param metadata  (required)
     * @return EMSetUserMetadataResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public EMSetUserMetadataResult setUserMetadata(String username, Map<String, String> metadata) throws ApiException {
        ApiResponse<EMSetUserMetadataResult> localVarResp = setUserMetadataWithHttpInfo(username, metadata);
        return localVarResp.getData();
    }

    /**
     * 设置用户属性
     * 用户属性的内容为一个或多个纯文本键值对，默认单个用户的属性总长度不能超过 2 KB，默认单个 app 下所有用户的属性总长度不能超过 10 GB。利用该 API，每次只能设置一个用户的用户属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7
     * @param username  (required)
     * @param metadata  (required)
     * @return ApiResponse&lt;EMSetUserMetadataResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * http.response.details
     */
    public ApiResponse<EMSetUserMetadataResult> setUserMetadataWithHttpInfo(String username, Map<String, String> metadata) throws ApiException {
        okhttp3.Call localVarCall = setUserMetadataValidateBeforeCall(username, metadata, null);
        Type localVarReturnType = new TypeToken<EMSetUserMetadataResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * 设置用户属性 (asynchronously)
     * 用户属性的内容为一个或多个纯文本键值对，默认单个用户的属性总长度不能超过 2 KB，默认单个 app 下所有用户的属性总长度不能超过 10 GB。利用该 API，每次只能设置一个用户的用户属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7
     * @param username  (required)
     * @param metadata  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * http.response.details
     */
    public okhttp3.Call setUserMetadataAsync(String username, Map<String, String> metadata, final ApiCallback<EMSetUserMetadataResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = setUserMetadataValidateBeforeCall(username, metadata, _callback);
        Type localVarReturnType = new TypeToken<EMSetUserMetadataResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
