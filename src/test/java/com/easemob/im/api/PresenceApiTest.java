/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api;

import com.easemob.im.ApiException;
import com.easemob.im.api.model.EMGetGroupOnlineMemberCountResult;
import com.easemob.im.api.model.EMGetMultipleUsersPresenceStatus;
import com.easemob.im.api.model.EMGetMultipleUsersPresenceStatusResult;
import com.easemob.im.api.model.EMGetUserSubscriptionListResult;
import com.easemob.im.api.model.EMSetUserPresenceStatus;
import com.easemob.im.api.model.EMSetUserPresenceStatusResult;
import com.easemob.im.api.model.EMSubscribeMultipleUsersPresenceStatus;
import com.easemob.im.api.model.EMSubscribeMultipleUsersPresenceStatusResult;
import com.easemob.im.api.model.EMUnsubscribeMultipleUsersPresenceStatusResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.*;

import static org.junit.jupiter.api.Assertions.*;

/**
 * API tests for PresenceApi
 */
@Disabled
public class PresenceApiTest extends AbstractTest {

    private final PresenceApi api = new PresenceApi();

    private final UserApi userApi = new UserApi();

    /**
     * 查询单个群组的在线成员数量
     *
     * 你可以查询单个群组的在线成员数量。如需使用该 API，需要联系环信商务开通。这里的在线状态指用户的 app 与服务器成功建立连接，不包括用户的自定义在线状态，如忙碌、马上回来等。文档介绍：https://docs-im-beta.easemob.com/document/server-side/presence.html#%E6%9F%A5%E8%AF%A2%E5%8D%95%E4%B8%AA%E7%BE%A4%E7%BB%84%E7%9A%84%E5%9C%A8%E7%BA%BF%E6%88%90%E5%91%98%E6%95%B0%E9%87%8F
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGroupOnlineMemberCountTest() throws ApiException {
        String groupId = "123456";
        Integer queryType = 1;
//        EMGetGroupOnlineMemberCountResult response = api.getGroupOnlineMemberCount(groupId, queryType);
//        System.out.println(response);
    }

    /**
     * 批量获取在线状态信息
     *
     * 你一次可获取多个用户的在线状态信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/presence.html#%E6%89%B9%E9%87%8F%E8%8E%B7%E5%8F%96%E5%9C%A8%E7%BA%BF%E7%8A%B6%E6%80%81%E4%BF%A1%E6%81%AF
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMultipleUserPresenceStatusTest() throws ApiException {
        String username = "tom";
        String resource = "ios_123456";
        String status = "1";
        String ext = "online";

        EMSetUserPresenceStatus setUserPresenceStatus = new EMSetUserPresenceStatus();
        setUserPresenceStatus.setExt(ext);
        assertDoesNotThrow(() -> api.setUserPresenceStatus(username, resource, status, setUserPresenceStatus));

        EMGetMultipleUsersPresenceStatus emGetMultipleUsersPresenceStatus = new EMGetMultipleUsersPresenceStatus();
        emGetMultipleUsersPresenceStatus.usernames(Collections.singletonList("jack"));

        EMGetMultipleUsersPresenceStatusResult result = assertDoesNotThrow(() -> api.getMultipleUserPresenceStatus(username, emGetMultipleUsersPresenceStatus));
        assertNotNull(result);
        assertNotNull(result.getResult());
        assertNotNull(result.getResult().get(0));
        assertNotNull(result.getResult().get(0).getUid());
        assertEquals(username, result.getResult().get(0).getUid());
        assertEquals(status, ((Map) result.getResult().get(0).getStatus()).get(resource));
        assertEquals(ext, result.getResult().get(0).getExt());
    }

    /**
     * 查询订阅列表
     *
     * 查询当前用户已订阅在线状态的用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/presence.html#%E6%9F%A5%E8%AF%A2%E8%AE%A2%E9%98%85%E5%88%97%E8%A1%A8
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserSubscriptionListTest() throws ApiException {
        String username1 = "tom1";
        String username2 = "tom2";
        String username3 = "tom3";
        Integer pageNum = 1;
        Integer pageSize = 10;

        EMSubscribeMultipleUsersPresenceStatus subscribeMultipleUsersPresenceStatus = new EMSubscribeMultipleUsersPresenceStatus();
        subscribeMultipleUsersPresenceStatus.setUsernames(Arrays.asList(username2, username3));

        assertDoesNotThrow(() -> api.subscribeMultipleUsersPresenceStatus(username1, "36000", subscribeMultipleUsersPresenceStatus));

        EMGetUserSubscriptionListResult result = assertDoesNotThrow(() -> api.getUserSubscriptionList(username1, pageNum, pageSize));
        assertNotNull(result);
        assertNotNull(result.getResult());
        assertNotNull(result.getResult().getSublist());
        assertEquals(2, result.getResult().getTotalnum());
        assertEquals(2, result.getResult().getSublist().size());
    }

    /**
     * 设置用户在线状态信息
     *
     * 可以设置用户在指定设备的在线状态信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/presence.html#%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7%E5%9C%A8%E7%BA%BF%E7%8A%B6%E6%80%81%E4%BF%A1%E6%81%AF
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setUserPresenceStatusTest() throws ApiException {
        String username = "tom";
        String resource = "ios_123456";
        String status = "1";
        EMSetUserPresenceStatus emSetUserPresenceStatus = new EMSetUserPresenceStatus();
        emSetUserPresenceStatus.setExt("ext");

        EMSetUserPresenceStatusResult result = assertDoesNotThrow(() -> api.setUserPresenceStatus(username, resource, status, emSetUserPresenceStatus));
        assertNotNull(result);
        assertNotNull(result.getResult());
        assertEquals("ok", result.getResult());
    }

    /**
     * 批量订阅在线状态
     *
     * 一次可订阅多个用户的在线状态。文档介绍：https://docs-im-beta.easemob.com/document/server-side/presence.html#%E6%89%B9%E9%87%8F%E8%AE%A2%E9%98%85%E5%9C%A8%E7%BA%BF%E7%8A%B6%E6%80%81
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscribeMultipleUsersPresenceStatusTest() throws ApiException {
        String username1 = "tom";
        String username2 = "jack";
        String expiry = "36000";
        EMSubscribeMultipleUsersPresenceStatus subscribeMultipleUsersPresenceStatus = new EMSubscribeMultipleUsersPresenceStatus();
        subscribeMultipleUsersPresenceStatus.setUsernames(Collections.singletonList(username2));

        EMSubscribeMultipleUsersPresenceStatusResult result = assertDoesNotThrow(() -> api.subscribeMultipleUsersPresenceStatus(username1, expiry, subscribeMultipleUsersPresenceStatus));
        assertNotNull(result);
        assertNotNull(result.getResult());
        assertEquals(1, result.getResult().size());

        EMGetUserSubscriptionListResult getUserSubscriptionListResult = assertDoesNotThrow(() -> api.getUserSubscriptionList(username1, 1, 10));
        assertNotNull(getUserSubscriptionListResult);
        assertNotNull(getUserSubscriptionListResult.getResult());
        assertNotNull(getUserSubscriptionListResult.getResult().getSublist());
        assertEquals(1, getUserSubscriptionListResult.getResult().getTotalnum());
        assertEquals(1, getUserSubscriptionListResult.getResult().getSublist().size());
    }

    /**
     * 取消订阅多个用户的在线状态
     *
     * 取消订阅多个用户的在线状态。文档介绍：https://docs-im-beta.easemob.com/document/server-side/presence.html#%E5%8F%96%E6%B6%88%E8%AE%A2%E9%98%85%E5%A4%9A%E4%B8%AA%E7%94%A8%E6%88%B7%E7%9A%84%E5%9C%A8%E7%BA%BF%E7%8A%B6%E6%80%81
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unsubscribeMultipleUsersPresenceStatusTest() throws ApiException {
        String username1 = "tom3";
        String username2 = "jack3";
        String expiry = "36000";
        EMSubscribeMultipleUsersPresenceStatus subscribeMultipleUsersPresenceStatus = new EMSubscribeMultipleUsersPresenceStatus();
        subscribeMultipleUsersPresenceStatus.setUsernames(Collections.singletonList(username2));

        EMSubscribeMultipleUsersPresenceStatusResult result = assertDoesNotThrow(() -> api.subscribeMultipleUsersPresenceStatus(username1, expiry, subscribeMultipleUsersPresenceStatus));
        assertNotNull(result);
        assertNotNull(result.getResult());
        assertEquals(1, result.getResult().size());

        EMUnsubscribeMultipleUsersPresenceStatusResult unsubscribeMultipleUsersPresenceStatusResult = assertDoesNotThrow(() -> api.unsubscribeMultipleUsersPresenceStatus(username1,
                Collections.singletonList(username2)));
        assertNotNull(unsubscribeMultipleUsersPresenceStatusResult);
        assertEquals("ok", unsubscribeMultipleUsersPresenceStatusResult.getResult());

        EMGetUserSubscriptionListResult getUserSubscriptionListResult = assertDoesNotThrow(() -> api.getUserSubscriptionList(username1, 1, 10));
        assertNotNull(getUserSubscriptionListResult);
        assertNotNull(getUserSubscriptionListResult.getResult());
        assertNotNull(getUserSubscriptionListResult.getResult().getSublist());
        assertEquals(0, getUserSubscriptionListResult.getResult().getTotalnum());
        assertEquals(0, getUserSubscriptionListResult.getResult().getSublist().size());
    }

}
