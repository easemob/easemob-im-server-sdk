/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api;

import com.easemob.im.ApiException;
import com.easemob.im.api.model.*;
import org.junit.jupiter.api.Test;

import java.util.*;

import static org.junit.jupiter.api.Assertions.*;

/**
 * API tests for MetadataApi
 */
public class MetadataApiTest extends AbstractTest {

    private final MetadataApi api = new MetadataApi();

    private final UserApi userApi = new UserApi();

    private final GroupApi groupApi = new GroupApi();

    public MetadataApiTest() {
    }

    /**
     * 批量设置群成员自定义属性
     * <p>
     * 批量设置群成员的自定义属性（key-value），例如，在群组中的昵称和头像等。每次请求最多可为 20 个群成员设置多个属性，而且可对不同群成员设置不同属性。传入相同用户 ID 时，若其属性名称不同，则添加，相同则更新。文档介绍：https://doc.easemob.com/document/server-side/group_member.html#%E6%89%B9%E9%87%8F%E8%AE%BE%E7%BD%AE%E7%BE%A4%E6%88%90%E5%91%98%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchCustomGroupMemberAttributeTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String username3 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        EMCreateUser createUser3 = new EMCreateUser();
        createUser3.setUsername(username3);
        createUser3.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);
        emCreateUserList.add(createUser3);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateGroup createGroup = new EMCreateGroup();
        createGroup.setOwner(username1);
        createGroup.setGroupname("test-group");
        createGroup.setDescription("元梦之星");
        createGroup.setMaxusers(200);
        createGroup.setMembers(Arrays.asList(username2, username3));
        createGroup.setPublic(true);

        EMCreateGroupResult createGroupResult =
                assertDoesNotThrow(() -> groupApi.createGroup(createGroup));
        assertNotNull(createGroupResult);
        assertNotNull(createGroupResult.getData());
        assertNotNull(createGroupResult.getData().getGroupid());

        String groupId = createGroupResult.getData().getGroupid();

        Map<String, String> metadata = new HashMap<>();
        metadata.put("key1", "value1");
        metadata.put("key2", "value2");

        List<EMBatchCustomGroupMemberAttribute> batchCustomGroupMemberAttributes = new ArrayList<>();

        EMBatchCustomGroupMemberAttribute batchCustomGroupMemberAttribute1 = new EMBatchCustomGroupMemberAttribute();
        batchCustomGroupMemberAttribute1.setUsername(username2);
        batchCustomGroupMemberAttribute1.setMetadata(metadata);

        EMBatchCustomGroupMemberAttribute batchCustomGroupMemberAttribute2 = new EMBatchCustomGroupMemberAttribute();
        batchCustomGroupMemberAttribute2.setUsername(username3);
        batchCustomGroupMemberAttribute2.setMetadata(metadata);

        batchCustomGroupMemberAttributes.add(batchCustomGroupMemberAttribute1);
        batchCustomGroupMemberAttributes.add(batchCustomGroupMemberAttribute2);

        EMBatchCustomGroupMemberAttributeResult batchCustomGroupMemberAttributeResult = assertDoesNotThrow(
                () -> api.batchCustomGroupMemberAttribute(groupId, batchCustomGroupMemberAttributes));
        assertNotNull(batchCustomGroupMemberAttributeResult);
        assertNotNull(batchCustomGroupMemberAttributeResult.getData());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        assertDoesNotThrow(() -> userApi.deleteUser(username3));
        try {
            groupApi.deleteGroup(groupId);
        } catch (ApiException ignored) {
        }
    }

    /**
     * 设置群成员自定义属性
     * <p>
     * 设置群成员自定义属性。群成员可设置自定义属性（key-value），例如在群组中的昵称和头像等。群主可修改所有群成员的自定义属性，其他群成员只能修改自己的自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%AE%BE%E7%BD%AE%E7%BE%A4%E6%88%90%E5%91%98%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customGroupMemberAttributeTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateGroup createGroup = new EMCreateGroup();
        createGroup.setOwner(username1);
        createGroup.setGroupname("test-group");
        createGroup.setDescription("元梦之星");
        createGroup.setMaxusers(200);
        createGroup.setMembers(Arrays.asList(username2));
        createGroup.setPublic(true);

        EMCreateGroupResult createGroupResult =
                assertDoesNotThrow(() -> groupApi.createGroup(createGroup));
        assertNotNull(createGroupResult);
        assertNotNull(createGroupResult.getData());
        assertNotNull(createGroupResult.getData().getGroupid());

        String groupId = createGroupResult.getData().getGroupid();

        Map<String, String> metadata = new HashMap<>();
        metadata.put("key1", "value1");
        metadata.put("key2", "value2");

        EMCustomGroupMemberAttribute customGroupMemberAttribute = new EMCustomGroupMemberAttribute();
        customGroupMemberAttribute.setMetaData(metadata);

        EMCustomGroupMemberAttributeResult customGroupMemberAttributeResult = assertDoesNotThrow(
                () -> api.customGroupMemberAttribute(groupId, username2, customGroupMemberAttribute));
        assertNotNull(customGroupMemberAttributeResult);
        assertNotNull(customGroupMemberAttributeResult.getData());
        assertEquals("value1", ((Map<String, String>) customGroupMemberAttributeResult.getData()).get("key1"));
        assertEquals("value2", ((Map<String, String>) customGroupMemberAttributeResult.getData()).get("key2"));

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {
            groupApi.deleteGroup(groupId);
        } catch (ApiException ignored) {
        }
    }

    /**
     * 删除用户属性
     * <p>
     * 删除单个用户的所有属性。如果指定的用户或用户属性不存在（可能已删除），也视为删除成功。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E5%88%A0%E9%99%A4%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserMetadataTest() throws ApiException {
        String username = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser = new EMCreateUser();
        createUser.setUsername(username);
        createUser.setPassword(password);

        emCreateUserList.add(createUser);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        Map<String, String> metadata = new HashMap<>();
        metadata.put("nickname", "javk");
        metadata.put("age", "20");
        EMSetUserMetadataResult setUserMetadataResult =
                assertDoesNotThrow(() -> api.setUserMetadata(username, metadata));
        assertNotNull(setUserMetadataResult);
        assertNotNull(setUserMetadataResult.getData());

        EMDeleteUserMetadataResult deleteUserMetadataResult =
                assertDoesNotThrow(() -> api.deleteUserMetadata(username));
        assertNotNull(deleteUserMetadataResult);
        assertNotNull(deleteUserMetadataResult.getData());
        assertEquals(true, deleteUserMetadataResult.getData());

        assertDoesNotThrow(() -> userApi.deleteUser(username));
    }

    /**
     * 获取单个群成员的所有自定义属性
     * <p>
     * 获取单个群成员的所有自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E8%8E%B7%E5%8F%96%E5%8D%95%E4%B8%AA%E7%BE%A4%E6%88%90%E5%91%98%E7%9A%84%E6%89%80%E6%9C%89%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGroupMemberAllCustomAttributeTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateGroup createGroup = new EMCreateGroup();
        createGroup.setOwner(username1);
        createGroup.setGroupname("test-group");
        createGroup.setDescription("元梦之星");
        createGroup.setMaxusers(200);
        createGroup.setMembers(Arrays.asList(username2));
        createGroup.setPublic(true);

        EMCreateGroupResult createGroupResult =
                assertDoesNotThrow(() -> groupApi.createGroup(createGroup));
        assertNotNull(createGroupResult);
        assertNotNull(createGroupResult.getData());
        assertNotNull(createGroupResult.getData().getGroupid());

        String groupId = createGroupResult.getData().getGroupid();

        Map<String, String> metadata = new HashMap<>();
        metadata.put("key1", "value1");
        metadata.put("key2", "value2");

        EMCustomGroupMemberAttribute customGroupMemberAttribute = new EMCustomGroupMemberAttribute();
        customGroupMemberAttribute.setMetaData(metadata);

        EMCustomGroupMemberAttributeResult customGroupMemberAttributeResult = assertDoesNotThrow(
                () -> api.customGroupMemberAttribute(groupId, username2, customGroupMemberAttribute));
        assertNotNull(customGroupMemberAttributeResult);
        assertNotNull(customGroupMemberAttributeResult.getData());
        assertEquals("value1", ((Map<String, String>) customGroupMemberAttributeResult.getData()).get("key1"));
        assertEquals("value2", ((Map<String, String>) customGroupMemberAttributeResult.getData()).get("key2"));

        EMGetGroupMemberAllCustomAttributeResult getGroupMemberAllCustomAttributeResult = assertDoesNotThrow(
                () -> api.getGroupMemberAllCustomAttribute(groupId, username2));
        assertNotNull(getGroupMemberAllCustomAttributeResult);
        assertNotNull(getGroupMemberAllCustomAttributeResult.getData());
        assertEquals("value1",
                ((Map<String, String>) getGroupMemberAllCustomAttributeResult.getData()).get("key1"));
        assertEquals("value1",
                ((Map<String, String>) getGroupMemberAllCustomAttributeResult.getData()).get("key1"));

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {
            groupApi.deleteGroup(groupId);
        } catch (ApiException ignored) {
        }
    }

    /**
     * 根据属性 key 获取多个群成员的自定义属性
     * <p>
     * 根据指定的属性 key 获取多个群成员的自定义属性。每次最多可获取 10 个群成员的自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/group.html#%E6%A0%B9%E6%8D%AE%E5%B1%9E%E6%80%A7-key-%E8%8E%B7%E5%8F%96%E5%A4%9A%E4%B8%AA%E7%BE%A4%E6%88%90%E5%91%98%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMultipleGroupMembersAttributesTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateGroup createGroup = new EMCreateGroup();
        createGroup.setOwner(username1);
        createGroup.setGroupname("test-group");
        createGroup.setDescription("元梦之星");
        createGroup.setMaxusers(200);
        createGroup.setMembers(Arrays.asList(username2));
        createGroup.setPublic(true);

        EMCreateGroupResult createGroupResult =
                assertDoesNotThrow(() -> groupApi.createGroup(createGroup));
        assertNotNull(createGroupResult);
        assertNotNull(createGroupResult.getData());
        assertNotNull(createGroupResult.getData().getGroupid());

        String groupId = createGroupResult.getData().getGroupid();

        Map<String, String> metadata = new HashMap<>();
        metadata.put("key1", "value1");
        metadata.put("key2", "value2");

        EMCustomGroupMemberAttribute customGroupMemberAttribute = new EMCustomGroupMemberAttribute();
        customGroupMemberAttribute.setMetaData(metadata);

        EMCustomGroupMemberAttributeResult customGroupMemberAttributeResult = assertDoesNotThrow(
                () -> api.customGroupMemberAttribute(groupId, username2, customGroupMemberAttribute));
        assertNotNull(customGroupMemberAttributeResult);
        assertNotNull(customGroupMemberAttributeResult.getData());
        assertEquals("value1", ((Map<String, String>) customGroupMemberAttributeResult.getData()).get("key1"));
        assertEquals("value2", ((Map<String, String>) customGroupMemberAttributeResult.getData()).get("key2"));

        EMGetMultipleGroupMembersAttributes getMultipleGroupMembersAttributes = new EMGetMultipleGroupMembersAttributes();
        getMultipleGroupMembersAttributes.setTargets(Arrays.asList(username2));
        getMultipleGroupMembersAttributes.setProperties(Arrays.asList("key1"));

        EMGetMultipleGroupMembersAttributesResult response = assertDoesNotThrow(() -> api.getMultipleGroupMembersAttributes(groupId,
                getMultipleGroupMembersAttributes));
        assertNotNull(response);
        assertNotNull(response.getData());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {
            groupApi.deleteGroup(groupId);
        } catch (ApiException ignored) {
        }
    }

    /**
     * 获取用户属性
     * <p>
     * 获取单个用户的全部用户属性键值对。需要在请求中填写 {username}，指定获取用户属性的用户 ID。如果指定的用户或用户属性不存在，返回空数据{}。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserMetadataTest() throws ApiException {
        String username1 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        emCreateUserList.add(createUser1);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        Map<String, String> metadata = new HashMap<>();
        metadata.put("nickname", "jack");
        metadata.put("age", "20");
        EMSetUserMetadataResult setUserMetadataResult =
                assertDoesNotThrow(() -> api.setUserMetadata(username1, metadata));
        assertNotNull(setUserMetadataResult);
        assertNotNull(setUserMetadataResult.getData());

        EMGetUserMetadataResult getUserMetadataResult =
                assertDoesNotThrow(() -> api.getUserMetadata(username1));
        assertNotNull(getUserMetadataResult);
        Map<String, String> result = (Map<String, String>) getUserMetadataResult.getData();
        assertEquals("jack", result.get("nickname"));
        assertEquals("20", result.get("age"));

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
    }

    /**
     * 获取 app 下用户属性总大小
     * <p>
     * 取该 app 下所有用户的属性数据大小，单位为字节。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%8B%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7%E6%80%BB%E5%A4%A7%E5%B0%8F
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserMetadataCapacityTest() throws ApiException {
        EMGetUserMetadataCapacityResult response =
                assertDoesNotThrow(() -> api.getUserMetadataCapacity());
        assertNotNull(response);
        assertNotNull(response.getData());
    }

    /**
     * 设置用户属性
     * <p>
     * 用户属性的内容为一个或多个纯文本键值对，默认单个用户的属性总长度不能超过 2 KB，默认单个 app 下所有用户的属性总长度不能超过 10 GB。利用该 API，每次只能设置一个用户的用户属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/userprofile.html#%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7%E5%B1%9E%E6%80%A7
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setUserMetadataTest() throws ApiException {
        String username1 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        emCreateUserList.add(createUser1);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        Map<String, String> metadata = new HashMap<>();
        metadata.put("nickname", "javk");
        metadata.put("age", "20");
        EMSetUserMetadataResult setUserMetadataResult =
                assertDoesNotThrow(() -> api.setUserMetadata(username1, metadata));
        assertNotNull(setUserMetadataResult);
        assertNotNull(setUserMetadataResult.getData());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
    }

}
