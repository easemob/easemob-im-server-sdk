/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api;

import com.easemob.im.ApiException;
import com.easemob.im.api.model.*;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

/**
 * API tests for ContactApi
 */
public class ContactApiTest extends AbstractTest {

    private final ContactApi api = new ContactApi();

    private final UserApi userApi = new UserApi();

    public ContactApiTest() {
    }

    /**
     * 添加好友
     *
     * 添加好友，好友必须是和当前用户在一个 App Key 下的用户。对于免费版即时通讯服务，单个 App Key 下的每个用户的好友数量上限为 1000，不同服务版本的 App Key 的该数量上限不同。文档介绍：https://docs-im-beta.easemob.com/document/server-side/user_relationship.html#%E6%B7%BB%E5%8A%A0%E5%A5%BD%E5%8F%8B
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addContactTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMAddContactResult response = api.addContact(username1, username2);
        assertNotNull(response);
        assertNotNull(response.getEntities());
        assertNotNull(response.getEntities().get(0));
        assertEquals(username2, response.getEntities().get(0).getUsername());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
    }

    /**
     * 一次性获取好友列表
     *
     * 一次性获取指定用户的好友列表。文档介绍：https://doc.easemob.com/document/server-side/user_relationship.html#%E4%B8%80%E6%AC%A1%E6%80%A7%E8%8E%B7%E5%8F%96%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllContactListTest() throws ApiException, InterruptedException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String username3 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        EMCreateUser createUser3 = new EMCreateUser();
        createUser3.setUsername(username3);
        createUser3.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);
        emCreateUserList.add(createUser3);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMAddContactResult addContactResult = assertDoesNotThrow(() -> api.addContact(username1, username2));
        assertNotNull(addContactResult);
        assertNotNull(addContactResult.getEntities());
        assertNotNull(addContactResult.getEntities().get(0));
        assertEquals(username2, addContactResult.getEntities().get(0).getUsername());

        assertDoesNotThrow(() -> api.addContact(username1, username3));

        Thread.sleep(5000);

        EMGetAllContactListResult getAllContactListResult = assertDoesNotThrow(() -> api.getAllContactList(username1));
        assertNotNull(getAllContactListResult);
        assertNotNull(getAllContactListResult.getData());
        assertEquals(2, getAllContactListResult.getData().size());
        assertEquals(2, getAllContactListResult.getCount());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        assertDoesNotThrow(() -> userApi.deleteUser(username3));
    }

    /**
     * 获取好友列表
     *
     * 获取指定用户的好友列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/user_relationship.html#%E8%8E%B7%E5%8F%96%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContactListTest() throws ApiException, InterruptedException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String username3 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        EMCreateUser createUser3 = new EMCreateUser();
        createUser3.setUsername(username3);
        createUser3.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);
        emCreateUserList.add(createUser3);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMAddContactResult addContactResult = assertDoesNotThrow(() -> api.addContact(username1, username2));
        assertNotNull(addContactResult);
        assertNotNull(addContactResult.getEntities());
        assertNotNull(addContactResult.getEntities().get(0));
        assertEquals(username2, addContactResult.getEntities().get(0).getUsername());

        Thread.sleep(5000);

        EMGetContactListResult getContactListResult = assertDoesNotThrow(() -> api.getContactList(username1, 1, null, true));
        assertNotNull(getContactListResult);
        assertNotNull(getContactListResult.getData());
        assertNotNull(getContactListResult.getData().getContacts());
        assertEquals(1, getContactListResult.getData().getContacts().size());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        assertDoesNotThrow(() -> userApi.deleteUser(username3));
    }

    /**
     * 移除好友
     *
     * 从用户的好友列表中移除一个用户。文档介绍：https://docs-im-beta.easemob.com/document/server-side/user_relationship.html#%E7%A7%BB%E9%99%A4%E5%A5%BD%E5%8F%8B
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeContactTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMAddContactResult addContactResult = assertDoesNotThrow(() -> api.addContact(username1, username2));
        assertNotNull(addContactResult);
        assertNotNull(addContactResult.getEntities());
        assertNotNull(addContactResult.getEntities().get(0));
        assertEquals(username2, addContactResult.getEntities().get(0).getUsername());

        EMRemoveContactResult removeContactResult = assertDoesNotThrow(() -> api.removeContact(username1, username2));
        assertNotNull(removeContactResult);
        assertNotNull(removeContactResult.getEntities());
        assertNotNull(removeContactResult.getEntities().get(0));
        assertEquals(username2, removeContactResult.getEntities().get(0).getUsername());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
    }

    /**
     * 设置好友备注
     *
     * 你可以调用该接口设置你在当前 app 下的好友的备注，即你和要设置备注的好友需在同一个 App Key 下。对于免费版即时通讯服务，单个 App Key 下的每个用户的好友数量上限为 100，不同服务套餐包的 App Key 的该数量上限不同。文档介绍：https://docs-im-beta.easemob.com/document/server-side/user_relationship.html#%E8%AE%BE%E7%BD%AE%E5%A5%BD%E5%8F%8B%E5%A4%87%E6%B3%A8
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setContactNoteTest() throws ApiException, InterruptedException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMAddContactResult addContactResult = assertDoesNotThrow(() -> api.addContact(username1, username2));
        assertNotNull(addContactResult);
        assertNotNull(addContactResult.getEntities());
        assertNotNull(addContactResult.getEntities().get(0));
        assertEquals(username2, addContactResult.getEntities().get(0).getUsername());

        Thread.sleep(5000);

        EMSetContactNote contactNote = new EMSetContactNote();
        contactNote.setRemark("tom");
        EMSetContactNoteResult setContactNoteResult = assertDoesNotThrow(() -> api.setContactNote(username1, username2, contactNote));
        assertNotNull(setContactNoteResult);
        assertNotNull(setContactNoteResult.getStatus());
        assertEquals("ok", setContactNoteResult.getStatus());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
    }

    /**
     * 导入好友列表
     *
     * 你可以调用该接口导入好友列表。文档介绍：https://doc.easemob.com/document/server-side/user_relationship.html#%E5%AF%BC%E5%85%A5%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void importContactListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMImportContactList emImportContactList = new EMImportContactList();
        emImportContactList.setUsernames(Arrays.asList(username2));

        EMImportContactListResult response = assertDoesNotThrow(() -> api.importContactList(username1, true, emImportContactList));
        assertNotNull(response);
        assertNotNull(response.getData());
        assertNotNull(response.getData().getSuccess());
        assertEquals(1, response.getData().getSuccess().size());

        EMGetAllContactListResult allContactListResult = assertDoesNotThrow(() -> api.getAllContactList(username1));
        assertNotNull(allContactListResult);
        assertNotNull(allContactListResult.getData());
        assertEquals(username2, allContactListResult.getData().get(0));

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
    }

}
