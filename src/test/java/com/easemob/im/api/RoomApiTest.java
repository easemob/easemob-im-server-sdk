/*
 * EMService
 * Easemob Rest API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.easemob.im.api;

import com.easemob.im.ApiException;
import com.easemob.im.api.model.*;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;
import java.util.*;

import static org.junit.jupiter.api.Assertions.*;

/**
 * API tests for RoomApi
 */
public class RoomApiTest extends AbstractTest {

    private final UserApi userApi = new UserApi();

    private final RoomApi api = new RoomApi();

    public RoomApiTest() {
    }

    /**
     * 批量添加聊天室成员
     *
     * 向聊天室添加多位用户，一次性最多可添加 60 位用户。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addMultipleUserToRoomTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMAddMultipleUserToRoom addMultipleUserToRoom = new EMAddMultipleUserToRoom();
        addMultipleUserToRoom.setUsernames(Arrays.asList(username2));
        assertDoesNotThrow(() -> api.addMultipleUserToRoom(roomId, addMultipleUserToRoom));

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 批量添加用户至聊天室黑名单
     *
     * 将多个用户加入指定聊天室的黑名单。你一次最多可以添加 60 个用户至聊天室黑名单。聊天室所有者无法被加入聊天室的黑名单。用户进入聊天室黑名单后，无法查看和收发该聊天室的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addMultipleUserToRoomBlockListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMAddMultipleUserToRoomBlockList addMultipleUserToRoomBlockList = new EMAddMultipleUserToRoomBlockList();
        addMultipleUserToRoomBlockList.setUsernames(Arrays.asList(username2));

        EMAddMultipleUserToRoomBlockListResult addMultipleUserToRoomBlockListResult =
                assertDoesNotThrow(() -> api.addMultipleUserToRoomBlockList(roomId,
                        addMultipleUserToRoomBlockList));
        assertNotNull(addMultipleUserToRoomBlockListResult);
        assertNotNull(addMultipleUserToRoomBlockListResult.getData());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 批量添加用户至聊天室白名单
     *
     * 添加多个用户至聊天室白名单。你一次最多可添加 60 个用户。用户添加至聊天室白名单后，在聊天室全员禁言时，仍可以在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addMultipleUserToRoomWhiteListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMAddMultipleUserToRoomWhiteList addMultipleUserToRoomWhiteList = new EMAddMultipleUserToRoomWhiteList();
        addMultipleUserToRoomWhiteList.setUsernames(Arrays.asList(username2));

        EMAddMultipleUserToRoomWhiteListResult addMultipleUserToRoomWhiteListResult =
                assertDoesNotThrow(() -> api.addMultipleUserToRoomWhiteList(roomId,
                        addMultipleUserToRoomWhiteList));
        assertNotNull(addMultipleUserToRoomWhiteListResult);
        assertNotNull(addMultipleUserToRoomWhiteListResult.getData());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 添加聊天室管理员
     *
     * 将一个聊天室成员设置为聊天室管理员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%AE%A1%E7%90%86%E5%91%98
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addRoomAdminTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMAddRoomAdmin addRoomAdmin = new EMAddRoomAdmin();
        addRoomAdmin.setNewadmin(username2);

        EMAddRoomAdminResult addRoomAdminResult =
                assertDoesNotThrow(() -> api.addRoomAdmin(roomId, addRoomAdmin));
        assertNotNull(addRoomAdminResult);
        assertNotNull(addRoomAdminResult.getData());
        assertEquals("success", addRoomAdminResult.getData().getResult());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 添加超级管理员
     *
     * 添加一个聊天室超级管理员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addRoomSuperAdminTest() throws ApiException {
        String username = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser = new EMCreateUser();
        createUser.setUsername(username);
        createUser.setPassword(password);

        emCreateUserList.add(createUser);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMAddRoomSuperAdmin addRoomSuperAdmin = new EMAddRoomSuperAdmin();
        addRoomSuperAdmin.setSuperadmin(username);

        EMAddRoomSuperAdminResult addRoomSuperAdminResult =
                assertDoesNotThrow(() -> api.addRoomSuperAdmin(addRoomSuperAdmin));
        assertNotNull(addRoomSuperAdminResult);
        assertNotNull(addRoomSuperAdminResult.getData());
        assertEquals("success", addRoomSuperAdminResult.getData().getResult());

        assertDoesNotThrow(() -> userApi.deleteUser(username));
    }

    /**
     * 添加单个聊天室成员
     *
     * 向聊天室添加一个成员。如果待添加的用户在 app 中不存在或已经在聊天室中，则请求失败并返回错误码 400。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addUserToRoomTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMAddUserToRoomResult addUserToRoomResult =
                assertDoesNotThrow(() -> api.addUserToRoom(roomId, username2));
        assertNotNull(addUserToRoomResult);
        assertNotNull(addUserToRoomResult.getData());
        assertEquals(true, addUserToRoomResult.getData().getResult());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 添加单个用户至聊天室黑名单
     *
     * 查询一个聊天室黑名单中的用户列表。黑名单中的用户无法查看或收到该聊天室的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addUserToRoomBlockListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMAddUserToRoomBlockListResult addUserToRoomBlockListResult =
                assertDoesNotThrow(() -> api.addUserToRoomBlockList(roomId, username2));
        assertNotNull(addUserToRoomBlockListResult);
        assertNotNull(addUserToRoomBlockListResult.getData());
        assertEquals(true, addUserToRoomBlockListResult.getData().getResult());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 添加单个用户至聊天室白名单
     *
     * 将单个用户添加至聊天室白名单。用户添加至聊天室白名单后，当聊天室全员禁言时，仍可以在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7%E8%87%B3%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addUserToRoomWhiteListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMAddUserToRoomWhiteListResult addUserToRoomWhiteListResult =
                assertDoesNotThrow(() -> api.addUserToRoomWhiteList(roomId, username2));
        assertNotNull(addUserToRoomWhiteListResult);
        assertNotNull(addUserToRoomWhiteListResult.getData());
        assertEquals(true, addUserToRoomWhiteListResult.getData().getResult());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 创建聊天室
     *
     * 创建一个聊天室，需设置聊天室名称、聊天室描述、聊天室成员最大人数（包括管理员）、聊天室管理员和普通成员以及聊天室扩展信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%9B%E5%BB%BA%E8%81%8A%E5%A4%A9%E5%AE%A4
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRoomTest() {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 创建聊天室，自定义聊天室id
     *
     * 创建一个聊天室，需设置自定义聊天室id、聊天室名称、聊天室描述、聊天室成员最大人数（包括管理员）、聊天室管理员和普通成员以及聊天室扩展信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%9B%E5%BB%BA%E8%81%8A%E5%A4%A9%E5%AE%A4
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customIdCreateRoomTest() {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";
        String customRoomId = "125666999";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setGroupid(customRoomId);
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());
        assertEquals(customRoomId, createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 删除聊天室
     *
     * 删除单个聊天室。如果要删除的聊天室不存在，会返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%A0%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRoomTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();
        try {
            EMDeleteRoomResult deleteRoomResult = api.deleteRoom(roomId);
            assertNotNull(deleteRoomResult);
            assertNotNull(deleteRoomResult.getData());
            assertEquals(true, deleteRoomResult.getData().getSuccess());

        } catch (ApiException ignored) {}

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
    }

    /**
     * 删除聊天室自定义属性
     *
     * 用户删除其设置的聊天室自定义属性。该方法只能删除当前用户设置的聊天室自定义属性，不能删除其他成员设置的自定义属性。该方法每次最多可删除 10 个自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%A0%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRoomCustomAttributesTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        Map<String, String> metadata = new HashMap<>();
        metadata.put("key1", "value1");
        metadata.put("key2", "value2");

        EMSetRoomCustomAttributes setRoomCustomAttributes = new EMSetRoomCustomAttributes();
        setRoomCustomAttributes.setAutoDelete("delete");
        setRoomCustomAttributes.setMetaData(metadata);
        EMSetRoomCustomAttributesResult setRoomCustomAttributesResult = assertDoesNotThrow(() -> api.setRoomCustomAttributes(roomId, username2, setRoomCustomAttributes));
        assertNotNull(setRoomCustomAttributesResult);
        assertNotNull(setRoomCustomAttributesResult.getData());
        assertNotNull(setRoomCustomAttributesResult.getData().getSuccessKeys());
        assertEquals(2, setRoomCustomAttributesResult.getData().getSuccessKeys().size());

        EMDeleteRoomCustomAttributes deleteRoomCustomAttributes = new EMDeleteRoomCustomAttributes();
        deleteRoomCustomAttributes.setKeys(Arrays.asList("key1", "key2"));

        EMDeleteRoomCustomAttributesResult deleteRoomCustomAttributesResult = assertDoesNotThrow(() -> api.deleteRoomCustomAttributes(roomId, username2, deleteRoomCustomAttributes));
        assertNotNull(deleteRoomCustomAttributesResult);
        assertNotNull(deleteRoomCustomAttributesResult.getData());
        assertNotNull(deleteRoomCustomAttributesResult.getData().getSuccessKeys());
        assertEquals(2, deleteRoomCustomAttributesResult.getData().getSuccessKeys().size());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 强制删除聊天室自定义属性
     *
     * 用户强制删除聊天室的自定义属性信息，即该方法除了会删除当前用户设置的聊天室自定义属性，还可以删除其他用户设置的自定义属性。该方法每次最多可删除 10 个自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%BC%BA%E5%88%B6%E5%88%A0%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forceDeleteRoomCustomAttributesTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        Map<String, String> metadata = new HashMap<>();
        metadata.put("key1", "value1");
        metadata.put("key2", "value2");

        EMSetRoomCustomAttributes setRoomCustomAttributes = new EMSetRoomCustomAttributes();
        setRoomCustomAttributes.setAutoDelete("delete");
        setRoomCustomAttributes.setMetaData(metadata);

        EMSetRoomCustomAttributesResult setRoomCustomAttributesResult = assertDoesNotThrow(() -> api.setRoomCustomAttributes(roomId, username2, setRoomCustomAttributes));
        assertNotNull(setRoomCustomAttributesResult);
        assertNotNull(setRoomCustomAttributesResult.getData());
        assertNotNull(setRoomCustomAttributesResult.getData().getSuccessKeys());
        assertEquals(2, setRoomCustomAttributesResult.getData().getSuccessKeys().size());

        EMForceDeleteRoomCustomAttributes forceDeleteRoomCustomAttributes = new EMForceDeleteRoomCustomAttributes();
        forceDeleteRoomCustomAttributes.setKeys(Arrays.asList("key1", "key2"));

        EMForceDeleteRoomCustomAttributesResult forceDeleteRoomCustomAttributesResult = assertDoesNotThrow(() -> api.forceDeleteRoomCustomAttributes(roomId, username2, forceDeleteRoomCustomAttributes));
        assertNotNull(forceDeleteRoomCustomAttributesResult);
        assertNotNull(forceDeleteRoomCustomAttributesResult.getData());
        assertNotNull(forceDeleteRoomCustomAttributesResult.getData().getSuccessKeys());
        assertEquals(2, forceDeleteRoomCustomAttributesResult.getData().getSuccessKeys().size());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 强制设置聊天室自定义属性
     *
     * 用户强制设置指定聊天室的自定义属性信息，即该方法可覆盖其他用户设置的聊天室自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%BC%BA%E5%88%B6%E8%AE%BE%E7%BD%AE%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void forceSetRoomCustomAttributesTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        Map<String, String> metadata = new HashMap<>();
        metadata.put("key1", "value1");
        metadata.put("key2", "value2");

        EMForceSetRoomCustomAttributes forceSetRoomCustomAttributes = new EMForceSetRoomCustomAttributes();
        forceSetRoomCustomAttributes.setAutoDelete("delete");
        forceSetRoomCustomAttributes.setMetaData(metadata);

        EMForceSetRoomCustomAttributesResult forceSetRoomCustomAttributesResult = assertDoesNotThrow(() -> api.forceSetRoomCustomAttributes(roomId, username2, forceSetRoomCustomAttributes));
        assertNotNull(forceSetRoomCustomAttributesResult);
        assertNotNull(forceSetRoomCustomAttributesResult.getData());
        assertNotNull(forceSetRoomCustomAttributesResult.getData().getSuccessKeys());
        assertEquals(2, forceSetRoomCustomAttributesResult.getData().getSuccessKeys().size());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 获取禁言列表
     *
     * 获取当前聊天室的禁言用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E7%A6%81%E8%A8%80%E5%88%97%E8%A1%A8
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMuteRoomMemberListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMMuteRoomMember muteRoomMember = new EMMuteRoomMember();
        muteRoomMember.setUsernames(Arrays.asList(username2));
        muteRoomMember.setMuteDuration(new BigDecimal(1000));

        EMMuteRoomMemberResult muteRoomMemberResult = assertDoesNotThrow(() -> api.muteRoomMember(roomId, muteRoomMember));
        assertNotNull(muteRoomMemberResult);
        assertNotNull(muteRoomMemberResult.getData());
        assertEquals(1, muteRoomMemberResult.getData().size());
        assertEquals(true, muteRoomMemberResult.getData().get(0).getResult());

        EMGetMuteRoomMemberListResult getMuteRoomMemberListResult = assertDoesNotThrow(() -> api.getMuteRoomMemberList(roomId));
        assertNotNull(getMuteRoomMemberListResult);
        assertNotNull(getMuteRoomMemberListResult.getData());
        assertNotNull(getMuteRoomMemberListResult.getData());
        assertEquals(1, getMuteRoomMemberListResult.getData().size());
        assertEquals(username2, muteRoomMemberResult.getData().get(0).getUser());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 获取聊天室管理员列表
     *
     * 获取聊天室管理员列表的接口。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%AE%A1%E7%90%86%E5%91%98%E5%88%97%E8%A1%A8
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoomAdminListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMAddRoomAdmin addRoomAdmin = new EMAddRoomAdmin();
        addRoomAdmin.setNewadmin(username2);
        assertDoesNotThrow(() -> api.addRoomAdmin(roomId, addRoomAdmin));

        EMGetRoomAdminListResult getRoomAdminListResult = assertDoesNotThrow(() -> api.getRoomAdminList(roomId));
        assertNotNull(getRoomAdminListResult);
        assertNotNull(getRoomAdminListResult.getData());
        assertEquals(1, getRoomAdminListResult.getData().size());
        assertEquals(username2, getRoomAdminListResult.getData().get(0));

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 获取聊天室公告
     *
     * 获取指定聊天室 ID 的聊天室公告。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%AC%E5%91%8A
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoomAnnouncementTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMModifyRoomAnnouncement modifyRoomAnnouncement = new EMModifyRoomAnnouncement();
        modifyRoomAnnouncement.setAnnouncement("元梦之星");

        EMModifyRoomAnnouncementResult modifyRoomAnnouncementResult = assertDoesNotThrow(() -> api.modifyRoomAnnouncement(roomId, modifyRoomAnnouncement));
        assertNotNull(modifyRoomAnnouncementResult);
        assertNotNull(modifyRoomAnnouncementResult.getData());
        assertEquals(true, modifyRoomAnnouncementResult.getData().getResult());

        EMGetRoomAnnouncementResult getRoomAnnouncementResult = assertDoesNotThrow(() -> api.getRoomAnnouncement(roomId));
        assertNotNull(getRoomAnnouncementResult);
        assertNotNull(getRoomAnnouncementResult.getData());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 查询聊天室黑名单
     *
     * 查询一个聊天室黑名单中的用户列表。黑名单中的用户无法查看或收到该聊天室的信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%9F%A5%E8%AF%A2%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoomBlockListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMAddUserToRoomBlockListResult addUserToRoomBlockListResult = assertDoesNotThrow(() -> api.addUserToRoomBlockList(roomId, username2));
        assertNotNull(addUserToRoomBlockListResult);
        assertNotNull(addUserToRoomBlockListResult.getData());
        assertEquals(true, addUserToRoomBlockListResult.getData().getResult());

        EMGetRoomBlockListResult getRoomBlockListResult = assertDoesNotThrow(() -> api.getRoomBlockList(roomId));
        assertNotNull(getRoomBlockListResult);
        assertNotNull(getRoomBlockListResult.getData());
        assertEquals(1, getRoomBlockListResult.getData().size());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 获取聊天室自定义属性
     *
     * 获取指定聊天室的自定义属性信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoomCustomAttributesTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        Map<String, String> metadata = new HashMap<>();
        metadata.put("key1", "value1");
        metadata.put("key2", "value2");

        EMSetRoomCustomAttributes setRoomCustomAttributes = new EMSetRoomCustomAttributes();
        setRoomCustomAttributes.setAutoDelete("delete");
        setRoomCustomAttributes.setMetaData(metadata);

        EMSetRoomCustomAttributesResult setRoomCustomAttributesResult = assertDoesNotThrow(() -> api.setRoomCustomAttributes(roomId, username2, setRoomCustomAttributes));
        assertNotNull(setRoomCustomAttributesResult);
        assertNotNull(setRoomCustomAttributesResult.getData());
        assertNotNull(setRoomCustomAttributesResult.getData().getSuccessKeys());
        assertEquals(2, setRoomCustomAttributesResult.getData().getSuccessKeys().size());

        EMGetRoomCustomAttributes getRoomCustomAttributes = new EMGetRoomCustomAttributes();
        getRoomCustomAttributes.setKeys(Arrays.asList("key1", "key2"));

        EMGetRoomCustomAttributesResult getRoomCustomAttributesResult = assertDoesNotThrow(() -> api.getRoomCustomAttributes(roomId, getRoomCustomAttributes));
        assertNotNull(getRoomCustomAttributesResult);
        assertNotNull(getRoomCustomAttributesResult.getData());
        assertEquals("value1", ((Map<String, String>) getRoomCustomAttributesResult.getData()).get("key1"));
        assertEquals("value2", ((Map<String, String>) getRoomCustomAttributesResult.getData()).get("key2"));

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 查询聊天室详情
     *
     * 查询一个聊天室的详情。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%9F%A5%E8%AF%A2%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%AF%A6%E6%83%85
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoomInfoTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMGetRoomInfoResult getRoomInfoResult = assertDoesNotThrow(() -> api.getRoomInfo(roomId));
        assertNotNull(getRoomInfoResult);
        assertNotNull(getRoomInfoResult.getData());
        assertNotNull(getRoomInfoResult.getData().get(0));
        assertEquals("元梦之星", getRoomInfoResult.getData().get(0).getDescription());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 获取 app 中的聊天室
     *
     * 分页获取应用下的聊天室列表和信息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96-app-%E4%B8%AD%E7%9A%84%E8%81%8A%E5%A4%A9%E5%AE%A4
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoomListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMGetRoomListResult getRoomListResult = assertDoesNotThrow(() -> api.getRoomList(1, null));
        assertNotNull(getRoomListResult);
        assertNotNull(getRoomListResult.getData());
        assertNotNull(getRoomListResult.getData().get(0));
        assertNotNull(getRoomListResult.getCursor());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 分页获取聊天室成员列表
     *
     * 可以分页获取聊天室成员列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98%E5%88%97%E8%A1%A8
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoomMemberListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMGetRoomMemberListResult getRoomMemberListResult = assertDoesNotThrow(() -> api.getRoomMemberList(roomId, 1, 1));
        assertNotNull(getRoomMemberListResult);
        assertNotNull(getRoomMemberListResult.getData());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 分页获取超级管理员列表
     *
     * 可以分页获取超级管理员列表的接口。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%88%86%E9%A1%B5%E8%8E%B7%E5%8F%96%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98%E5%88%97%E8%A1%A8
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoomSuperAdminListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMAddRoomSuperAdmin addRoomSuperAdmin = new EMAddRoomSuperAdmin();
        addRoomSuperAdmin.setSuperadmin(username2);
        assertDoesNotThrow(() -> api.addRoomSuperAdmin(addRoomSuperAdmin));

        EMGetRoomSuperAdminListResult getRoomSuperAdminListResult = assertDoesNotThrow(() -> api.getRoomSuperAdminList(1, 1));
        assertNotNull(getRoomSuperAdminListResult);
        assertNotNull(getRoomSuperAdminListResult.getData());
        assertEquals(1, getRoomSuperAdminListResult.getData().size());
        assertEquals(username2, getRoomSuperAdminListResult.getData().get(0));

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 查询聊天室白名单
     *
     * 查询一个聊天室白名单中的用户列表。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%9F%A5%E8%AF%A2%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoomWhiteListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        assertDoesNotThrow(() -> api.addUserToRoomWhiteList(roomId, username2));

        EMGetRoomWhiteListResult getRoomWhiteListResult = assertDoesNotThrow(() -> api.getRoomWhiteList(roomId));
        assertNotNull(getRoomWhiteListResult);
        assertNotNull(getRoomWhiteListResult.getData());
        assertEquals(2, getRoomWhiteListResult.getData().size());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 获取用户加入的聊天室
     *
     * 根据用户 ID 分页获取该用户加入的聊天室。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%8A%A0%E5%85%A5%E7%9A%84%E8%81%8A%E5%A4%A9%E5%AE%A4
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserJoinedRoomListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMGetUserJoinedRoomListResult getUserJoinedRoomListResult = assertDoesNotThrow(() -> api.getUserJoinedRoomList(username1, 1, 1));
        assertNotNull(getUserJoinedRoomListResult);
        assertNotNull(getUserJoinedRoomListResult.getData());
        assertEquals(1, getUserJoinedRoomListResult.getData().size());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 修改聊天室信息
     *
     * 修改指定聊天室的信息。仅支持修改聊天室名称、聊天室描述和聊天室最大成员数。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E4%BF%AE%E6%94%B9%E8%81%8A%E5%A4%A9%E5%AE%A4%E4%BF%A1%E6%81%AF
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modifyRoomTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMModifyRoom modifyRoom = new EMModifyRoom();
        modifyRoom.setDescription("元梦之星");
        modifyRoom.setMaxusers(300);
        modifyRoom.setName("room name");

        EMModifyRoomResult modifyRoomResult = assertDoesNotThrow(() -> api.modifyRoom(roomId, modifyRoom));
        assertNotNull(modifyRoomResult);
        assertNotNull(modifyRoomResult.getData());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 修改聊天室公告
     *
     * 修改指定聊天室 ID 的聊天室公告。聊天室公告内容不能超过 512 个字符。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E4%BF%AE%E6%94%B9%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%AC%E5%91%8A
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modifyRoomAnnouncementTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMModifyRoomAnnouncement modifyRoomAnnouncement = new EMModifyRoomAnnouncement();
        modifyRoomAnnouncement.setAnnouncement("元梦之星");

        EMModifyRoomAnnouncementResult modifyRoomAnnouncementResult = assertDoesNotThrow(() -> api.modifyRoomAnnouncement(roomId, modifyRoomAnnouncement));
        assertNotNull(modifyRoomAnnouncementResult);
        assertNotNull(modifyRoomAnnouncementResult.getData());
        assertEquals(true, modifyRoomAnnouncementResult.getData().getResult());

        EMGetRoomAnnouncementResult getRoomAnnouncementResult = assertDoesNotThrow(() -> api.getRoomAnnouncement(roomId));
        assertNotNull(getRoomAnnouncementResult);
        assertNotNull(getRoomAnnouncementResult.getData());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 禁言聊天室全体成员
     *
     * 对所有聊天室成员一键禁言。该操作不影响聊天室禁言列表，即一键禁言不会将聊天室所有成员加入聊天室禁言列表。设置聊天室全员禁言后，仅聊天室白名单中的用户可在聊天室内发消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E7%A6%81%E8%A8%80%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%A8%E4%BD%93%E6%88%90%E5%91%98
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void muteAllRoomMemberTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMMuteAllRoomMemberResult muteAllRoomMemberResult = assertDoesNotThrow(() -> api.muteAllRoomMember(roomId));
        assertNotNull(muteAllRoomMemberResult);
        assertNotNull(muteAllRoomMemberResult.getData());
        assertEquals(true, muteAllRoomMemberResult.getData().getMute());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 禁言聊天室成员
     *
     * 禁言单个或多个聊天室成员。你一次最多可禁言 60 个成员。用户被禁言后，将无法在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E7%A6%81%E8%A8%80%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void muteRoomMemberTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMMuteRoomMember muteRoomMember = new EMMuteRoomMember();
        muteRoomMember.setUsernames(Arrays.asList(username2));
        muteRoomMember.setMuteDuration(new BigDecimal(1000));

        EMMuteRoomMemberResult muteRoomMemberResult = assertDoesNotThrow(() -> api.muteRoomMember(roomId, muteRoomMember));
        assertNotNull(muteRoomMemberResult);
        assertNotNull(muteRoomMemberResult.getData());
        assertEquals(username2, muteRoomMemberResult.getData().get(0).getUser());
        assertEquals(true, muteRoomMemberResult.getData().get(0).getResult());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 移除聊天室管理员
     *
     * 将用户的角色从聊天室管理员降为普通聊天室成员。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%B7%BB%E5%8A%A0%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%AE%A1%E7%90%86%E5%91%98
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeRoomAdminTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMAddRoomAdmin addRoomAdmin = new EMAddRoomAdmin();
        addRoomAdmin.setNewadmin(username2);
        assertDoesNotThrow(() -> api.addRoomAdmin(roomId, addRoomAdmin));

        EMRemoveRoomAdminResult removeRoomAdminResult = assertDoesNotThrow(() -> api.removeRoomAdmin(roomId, username2));
        assertNotNull(removeRoomAdminResult);
        assertNotNull(removeRoomAdminResult.getData());
        assertEquals("success", removeRoomAdminResult.getData().getResult());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 撤销超级管理员
     *
     * 撤销超级管理员权限，用户将不能再创建聊天室。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E6%92%A4%E9%94%80%E8%B6%85%E7%BA%A7%E7%AE%A1%E7%90%86%E5%91%98
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeRoomSuperAdminTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMAddRoomSuperAdmin addRoomSuperAdmin = new EMAddRoomSuperAdmin();
        addRoomSuperAdmin.setSuperadmin(username2);
        assertDoesNotThrow(() -> api.addRoomSuperAdmin(addRoomSuperAdmin));

        EMRemoveRoomSuperAdminResult removeRoomSuperAdminResult = assertDoesNotThrow(() -> api.removeRoomSuperAdmin(username2));
        assertNotNull(removeRoomSuperAdminResult);
        assertNotNull(removeRoomSuperAdminResult.getData());
        assertNotNull(removeRoomSuperAdminResult.getData().getResource());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 移除单个聊天室成员
     *
     * 从聊天室移除一个成员。如果被移除用户不在聊天室中或聊天室不存在，将返回错误。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E7%A7%BB%E9%99%A4%E5%8D%95%E4%B8%AA%E8%81%8A%E5%A4%A9%E5%AE%A4%E6%88%90%E5%91%98
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeUserFromRoomTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMRemoveUserFromRoomResult removeUserFromRoomResult = assertDoesNotThrow(() -> api.removeUserFromRoom(roomId, username2));
        assertNotNull(removeUserFromRoomResult);
        assertNotNull(removeUserFromRoomResult.getData());
        assertEquals(true, removeUserFromRoomResult.getData().getResult());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 从聊天室黑名单移出单个用户
     *
     * 将指定用户移出聊天室黑名单。对于聊天室黑名单中的用户，如果需要将其再次加入聊天室，需要先将其从聊天室黑名单中移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E4%BB%8E%E8%81%8A%E5%A4%A9%E5%AE%A4%E9%BB%91%E5%90%8D%E5%8D%95%E7%A7%BB%E5%87%BA%E5%8D%95%E4%B8%AA%E7%94%A8%E6%88%B7
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeUserFromRoomBlockListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        assertDoesNotThrow(() -> api.addUserToRoomBlockList(roomId, username2));

        EMRemoveUserFromRoomBlockListResult removeUserFromRoomBlockListResult = assertDoesNotThrow(() -> api.removeUserFromRoomBlockList(roomId, username2));
        assertNotNull(removeUserFromRoomBlockListResult);
        assertNotNull(removeUserFromRoomBlockListResult.getData());
        assertEquals(true, removeUserFromRoomBlockListResult.getData().getResult());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 将用户移出聊天室白名单
     *
     * 将指定用户从聊天室白名单移除。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E5%B0%86%E7%94%A8%E6%88%B7%E7%A7%BB%E5%87%BA%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%99%BD%E5%90%8D%E5%8D%95
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeUserFromRoomWhiteListTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        assertDoesNotThrow(() -> api.addUserToRoomWhiteList(roomId, username2));

        EMRemoveUserFromRoomWhiteListResult removeUserFromRoomWhiteListResult = assertDoesNotThrow(() -> api.removeUserFromRoomWhiteList(roomId, username2));
        assertNotNull(removeUserFromRoomWhiteListResult);
        assertNotNull(removeUserFromRoomWhiteListResult.getData());
        assertEquals(true, removeUserFromRoomWhiteListResult.getData().getResult());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 设置聊天室自定义属性
     *
     * 指定用户设置特定聊天室的自定义属性。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%AE%BE%E7%BD%AE%E8%81%8A%E5%A4%A9%E5%AE%A4%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setRoomCustomAttributesTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        Map<String, String> metadata = new HashMap<>();
        metadata.put("key1", "value1");
        metadata.put("key2", "value2");

        EMSetRoomCustomAttributes setRoomCustomAttributes = new EMSetRoomCustomAttributes();
        setRoomCustomAttributes.setAutoDelete("delete");
        setRoomCustomAttributes.setMetaData(metadata);

        EMSetRoomCustomAttributesResult setRoomCustomAttributesResult = assertDoesNotThrow(() -> api.setRoomCustomAttributes(roomId, username2, setRoomCustomAttributes));
        assertNotNull(setRoomCustomAttributesResult);
        assertNotNull(setRoomCustomAttributesResult.getData());
        assertNotNull(setRoomCustomAttributesResult.getData().getSuccessKeys());
        assertEquals(2, setRoomCustomAttributesResult.getData().getSuccessKeys().size());

        EMGetRoomCustomAttributes getRoomCustomAttributes = new EMGetRoomCustomAttributes();
        getRoomCustomAttributes.setKeys(Arrays.asList("key1", "key2"));

        EMGetRoomCustomAttributesResult getRoomCustomAttributesResult = assertDoesNotThrow(() -> api.getRoomCustomAttributes(roomId, getRoomCustomAttributes));
        assertNotNull(getRoomCustomAttributesResult);
        assertNotNull(getRoomCustomAttributesResult.getData());
        assertEquals("value1", ((Map<String, String>) getRoomCustomAttributesResult.getData()).get("key1"));
        assertEquals("value2", ((Map<String, String>) getRoomCustomAttributesResult.getData()).get("key2"));

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 解除聊天室全员禁言
     *
     * 一键取消对聊天室全体成员的禁言。解除禁言后，聊天室成员可以在聊天室中正常发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%A7%A3%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E5%85%A8%E5%91%98%E7%A6%81%E8%A8%80
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unmuteAllRoomMemberTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        assertDoesNotThrow(() -> api.muteAllRoomMember(roomId));

        EMUnmuteAllRoomMemberResult unmuteAllRoomMemberResult = assertDoesNotThrow(() -> api.unmuteAllRoomMember(roomId));
        assertNotNull(unmuteAllRoomMemberResult);
        assertNotNull(unmuteAllRoomMemberResult.getData());
        assertEquals(false, unmuteAllRoomMemberResult.getData().getMute());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

    /**
     * 解除聊天室禁言成员
     *
     * 解除对一个聊天室成员的禁言。解除禁言后，该成员可以正常在聊天室中发送消息。文档介绍：https://docs-im-beta.easemob.com/document/server-side/chatroom.html#%E8%A7%A3%E9%99%A4%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%A6%81%E8%A8%80%E6%88%90%E5%91%98
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unmuteRoomMemberTest() throws ApiException {
        String username1 = randomUserName();
        String username2 = randomUserName();
        String password = "123456";

        List<EMCreateUser> emCreateUserList = new ArrayList<>();
        EMCreateUser createUser1 = new EMCreateUser();
        createUser1.setUsername(username1);
        createUser1.setPassword(password);

        EMCreateUser createUser2 = new EMCreateUser();
        createUser2.setUsername(username2);
        createUser2.setPassword(password);

        emCreateUserList.add(createUser1);
        emCreateUserList.add(createUser2);

        assertDoesNotThrow(() -> userApi.createUsers(emCreateUserList));

        EMCreateRoom createRoom = new EMCreateRoom();
        createRoom.setOwner(username1);
        createRoom.setName("test-room");
        createRoom.setDescription("元梦之星");
        createRoom.setMaxusers(200);
        createRoom.setMembers(Arrays.asList(username2));
        createRoom.setCustom("custom");

        EMCreateRoomResult createRoomResult= assertDoesNotThrow(() -> api.createRoom(createRoom));
        assertNotNull(createRoomResult);
        assertNotNull(createRoomResult.getData());
        assertNotNull(createRoomResult.getData().getId());

        String roomId = createRoomResult.getData().getId();

        EMMuteRoomMember muteRoomMember = new EMMuteRoomMember();
        muteRoomMember.setUsernames(Arrays.asList(username2));
        muteRoomMember.setMuteDuration(new BigDecimal(1000));

        assertDoesNotThrow(() -> api.muteRoomMember(roomId, muteRoomMember));

        EMUnmuteRoomMemberResult unmuteRoomMemberResult = assertDoesNotThrow(() -> api.unmuteRoomMember(roomId, username2));
        assertNotNull(unmuteRoomMemberResult);
        assertNotNull(unmuteRoomMemberResult.getData());
        assertEquals(true, unmuteRoomMemberResult.getData().get(0).getResult());

        assertDoesNotThrow(() -> userApi.deleteUser(username1));
        assertDoesNotThrow(() -> userApi.deleteUser(username2));
        try {api.deleteRoom(roomId);} catch (ApiException ignored) {}
    }

}
